#!/usr/bin/env bash

set -o nounset
set -o errexit
set -o pipefail

# If need be nginx can proxy to another ip eg for docker env, or virtual machine

if [ ! -f .env ]; then
    echo ".env file not found!"
    exit 1
fi

set -a
source .env
set +a

# Create config file for the app / site.
cat > "/etc/nginx/sites-available/atomiclti.conf" <<-EOF
server {

    listen *:443;
    server_name atomiclti.atomicjolt.xyz;

    ssl on;
    ssl_session_cache         builtin:1000  shared:SSL:10m;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers               HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    ssl_certificate     ssl/STAR_atomicjolt_xyz.crt;
    ssl_certificate_key ssl/STAR_atomicjolt_xyz.key;

    location / {

      proxy_set_header   Host \$host;
      proxy_set_header   X-Forwarded-Ssl on;
      proxy_set_header   X-Forwarded-For \$remote_addr;
      proxy_set_header   X-Forwarded-Proto \$scheme;
      proxy_set_header   X-Real-IP        \$remote_addr;
      proxy_http_version 1.1;
      proxy_pass         http://127.0.0.1:8888/;

    }

    # Proxy webpack dev server websocket requests
    location /sockjs-node {
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade \$http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_pass http://127.0.0.1:3000;
    }
}
EOF

ln -sf /etc/nginx/sites-available/atomiclti.conf /etc/nginx/sites-enabled/

# Restarting nginx
echo "Restarting nginx..."
systemctl restart nginx
echo "-------------------------------------"
echo "Your app has been added."
echo "Your next steps..."
echo "cd build && yarn build"
echo "Visit your app / project here: https://atomiclti.atomicjolt.xyz"
echo "-------------------------------------"
